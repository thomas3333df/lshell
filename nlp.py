#!/usr/bin/python

# 变量初始化
支持的操作=['安装','帮助','版本','命令']
当前操作系统名称,当前操作系统版本=获取操作系统信息()
支持的操作系统列表=获取支持的操作系统列表()
# 初始化i18n
# 初始化yml解析器

# 检查命令行中的操作字符串。检查是否是合法，如果不合法，那么告知推出
# 检查当前的os是否是在支持的范围之内，如果不是的话，那么告知不进行向下进行
if 当前操作系统名称 not in 支持的操作系统列表:
    print('') #显示提示操作系统不支持信息
    pass

if 当前操作系统版本 not in 获取支持的操作系统版本列表(当前操作系统名称):
    print('') #显示提示操作系统不支持信息
    pass
    
# 安装函数
def  安装():
    # 初始化变量
    程序已经安装=获取程序是否已经安装()
    python版本=获取python版本()
    支持python版本=获取支持python版本()
    所有支持语言=获取支持语言()
    所有命令=获取所有命令()
    
    # 检查程序是否已经安装，如果没有安装，那么需要告知用户进行安装
    if 程序已经安装:
        print()
        pass

    # 检查python版本号是否在支持的范围之内,如果不支持的话,那么告知
    if python版本 < 支持python版本:
        print()
        pass

    显示版权信息()
    # 打印支持语言，提示用户选择
    显示所有语言()
    用户选择语言=input()
    # 如果用户选择取消，那么推出

    # 如果用户选择继续，那么正式开始安装
    
    # 获取所有的alias列表
    # 循环所有的命令
    # 检查当前的命令是否在alias表中,如果么有的话,那么调用系统变量进行添加,将该命令添加到新增alias列表中
    # 如果有的话,将该命令添加到已经存在的alias列表中,之后直接跳过,
    # 如果没有出现错误,那么告知安装成功
    # 显示已经新安装的alias的列表
    # 显示系统已有而未安装的alias的列表
    # 告知如果需要帮助可以输入帮助并回车即可
    pass


def 帮助(命令=None):
    # 检查命令是否在我么支持的命令列表之内，如果是的话，那么显示这条命令的详细信息。
    # 如果不是的话，那么告知命令没有找到’
    # 如果么有输入命令名称的话，那么直接显示所有命令的命令的帮助信息
    # 打印帮助信息
    pass

def 版本():
    # 打印当前程序的版本信息
    print('1.0')
    pass

def 获取操作系统信息():
    return ""

def 获取python版本():
    return ""

def 获取支持python版本():
    return 3.1

def 获取支持语言():
    return []

def 获取所有命令():
    return []

def 显示所有语言():
    return []

def 获取程序是否已经安装():
    return True

def 获取支持的操作系统列表():
    return  []

def 获取支持的操作系统版本列表(当前操作系统名称):
    return  []

def 显示版权信息():
    print('')